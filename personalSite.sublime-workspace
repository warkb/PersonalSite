{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"con",
				"console"
			],
			[
				"i",
				"index"
			],
			[
				"mo",
				"months"
			],
			[
				"fun",
				"function〔keyword〕"
			],
			[
				"wid",
				"width"
			],
			[
				"wi",
				"width"
			],
			[
				"li",
				"link\tTag"
			],
			[
				"align-",
				"align-items"
			],
			[
				"f",
				"table-footer-group"
			],
			[
				"ali",
				"align-content"
			],
			[
				"trn",
				"transition"
			],
			[
				"ma",
				"max〔function〕"
			],
			[
				"M",
				"Model"
			],
			[
				"C",
				"CharField"
			],
			[
				"for",
				"form〔variable〕"
			],
			[
				"ba",
				"background"
			],
			[
				"co",
				"color"
			],
			[
				"fo",
				"form-group"
			],
			[
				"st",
				"style\tTag"
			],
			[
				"S",
				"Subscriber"
			],
			[
				"cons",
				"console_log"
			],
			[
				"rev",
				"revArr〔variable〕"
			],
			[
				"ra",
				"range"
			],
			[
				"s",
				"sequence"
			],
			[
				"un",
				"undefined\t: object Global"
			],
			[
				"cou",
				"countChar〔function〕"
			],
			[
				"di",
				"div\tTag"
			],
			[
				"ur",
				"url〔module〕"
			],
			[
				"da",
				"date"
			],
			[
				"ti",
				"timezone〔module〕"
			],
			[
				"no",
				"now"
			],
			[
				"fu",
				"future_question〔variable〕"
			],
			[
				"se",
				"self〔argument〕"
			],
			[
				"tim",
				"timedelta〔class〕"
			],
			[
				"qu",
				"question"
			],
			[
				"ge",
				"get_object_or_404〔module〕"
			],
			[
				"Q",
				"QuestionAdmin"
			],
			[
				"tes",
				"tests"
			],
			[
				"te",
				"tests"
			],
			[
				"dir",
				"dirlist〔variable〕"
			],
			[
				"get",
				"getTestsFromList〔function〕"
			],
			[
				"str",
				"string〔variable〕"
			],
			[
				"if",
				"if\tIf Condition"
			],
			[
				"res",
				"results"
			],
			[
				"Ht",
				"HttpResponse〔module〕"
			],
			[
				"re",
				"render〔module〕"
			],
			[
				"tr",
				"try\tTry/Except"
			],
			[
				"in",
				"input\tTag"
			],
			[
				"ac",
				"action\tAttr"
			],
			[
				"de",
				"detail"
			],
			[
				"la",
				"latest_question_list〔variable〕"
			],
			[
				"Re",
				"RequestContext〔module〕"
			],
			[
				"m",
				"models〔module〕"
			],
			[
				"pa",
				"path〔module〕"
			],
			[
				"set",
				"setattr〔function〕"
			],
			[
				"el",
				"else〔keyword〕"
			],
			[
				"int",
				"interface〔variable〕"
			],
			[
				"wri",
				"write〔function〕"
			],
			[
				"_",
				"_thread"
			],
			[
				"lo",
				"logging〔module〕"
			],
			[
				"vla",
				"vlan〔variable〕"
			],
			[
				"Про",
				"Проверяем"
			],
			[
				"net",
				"networkTable〔variable〕"
			],
			[
				"dy",
				"dynamicIpv6Prim"
			],
			[
				"sy",
				"system〔blob〕"
			],
			[
				"radv",
				"radvdNewConfigStr〔variable〕"
			],
			[
				"sys",
				"system"
			],
			[
				"Inte",
				"InterfacesUp〔module〕"
			],
			[
				"AddV",
				"AddVlanInterface"
			],
			[
				"dh",
				"dhcp_support.pyc"
			],
			[
				"prin",
				"print〔keyword〕"
			],
			[
				"pr",
				"print〔keyword〕"
			],
			[
				"ch",
				"checkThatBug〔function〕"
			],
			[
				"In",
				"InclusionOrderComparison〔module〕"
			],
			[
				"pri",
				"print"
			],
			[
				"ipv6D",
				"ipv6DynAddr2"
			],
			[
				"ipv6d",
				"ipv6DynAddr1"
			],
			[
				"ip",
				"ipv6"
			],
			[
				"ipv6",
				"ipv6address"
			],
			[
				"networ",
				"networkTable"
			],
			[
				"Ne",
				"NetworkTable〔class〕"
			],
			[
				"resu",
				"result〔variable〕"
			],
			[
				"en",
				"enumerate〔class〕"
			],
			[
				"ex",
				"executor〔variable〕"
			],
			[
				"d",
				"display"
			],
			[
				"sn",
				"snif2〔module〕"
			],
			[
				"supe",
				"supervisor〔function〕"
			],
			[
				"asy",
				"asyncio"
			],
			[
				"stat",
				"status"
			],
			[
				"su",
				"supervisor〔function〕"
			],
			[
				"spi",
				"spinner"
			],
			[
				"spin",
				"spinner〔variable〕"
			],
			[
				"fl",
				"flush〔variable〕"
			],
			[
				"ite",
				"itertools〔module〕"
			],
			[
				"std",
				"stdout〔variable〕"
			],
			[
				"mes",
				"messageStr〔variable〕"
			],
			[
				"entr",
				"entry"
			],
			[
				"is",
				"IsNetmask〔function〕"
			],
			[
				"msg",
				"msg1〔variable〕"
			],
			[
				"ms",
				"msg1〔variable〕"
			],
			[
				"fi",
				"firstServerFacility〔variable〕"
			],
			[
				"l",
				"level"
			],
			[
				"k",
				"key.syslog"
			],
			[
				"p",
				"print"
			],
			[
				"A",
				"AlwaysTrue"
			],
			[
				"id",
				"isdigit〔function〕"
			],
			[
				"log",
				"loggingLevel〔argument〕"
			],
			[
				"EnableLoggi",
				"EnableLoggingCliCommand〔function〕"
			],
			[
				"cl",
				"class〔keyword〕"
			],
			[
				"пак",
				"пакета"
			],
			[
				"ShowR",
				"ShowRunConfig〔function〕"
			],
			[
				"Sys",
				"system〔blob〕"
			],
			[
				"et",
				"eth2〔variable〕"
			],
			[
				"gro",
				"group"
			],
			[
				"gr",
				"group"
			],
			[
				"ave",
				"averager〔function〕"
			],
			[
				"ab",
				"abc"
			],
			[
				"__",
				"__\t__magic__"
			],
			[
				"ht",
				"htmlize〔function〕"
			],
			[
				"htm",
				"htmlize"
			],
			[
				"pp",
				"pppoeCli"
			],
			[
				"pro",
				"promotion"
			],
			[
				"cla",
				"class〔keyword〕"
			],
			[
				"or",
				"order〔argument〕"
			],
			[
				"c",
				"class"
			],
			[
				"ca",
				"cart〔argument〕"
			],
			[
				"ne",
				"new_item〔variable〕"
			],
			[
				"bi",
				"bisect〔module〕"
			]
		]
	},
	"buffers":
	[
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 1250,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 1034,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "paralax.js",
			"settings":
			{
				"buffer_size": 311,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/WarKB/YandexDisk/КНИГИ/js/index.html",
			"settings":
			{
				"buffer_size": 143,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/WarKB/YandexDisk/КНИГИ/js/script.js",
			"settings":
			{
				"buffer_size": 304,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "ins",
		"selected_items":
		[
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add..."
			],
			[
				"ad",
				"Git: Add..."
			],
			[
				"codein",
				"SublimeCodeIntel: Dump Import Directories"
			],
			[
				"code in",
				"SublimeCodeIntel: Enable Live Autocompletion for Current Language"
			],
			[
				"pus",
				"Git: Push Current Branch"
			],
			[
				"pull",
				"Git: Pull"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"com\t",
				"Git: Commit"
			],
			[
				"cha",
				"Git: Change Branch"
			],
			[
				"pu",
				"Git: Pull"
			],
			[
				"a",
				"Git: Add..."
			],
			[
				"push ",
				"Git: Push Current Branch"
			],
			[
				"ch",
				"Git: Change Branch"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"new ",
				"Git: New Branch"
			],
			[
				"current ",
				"Git: Diff Current File"
			],
			[
				"curr",
				"Git: Diff Current File"
			],
			[
				"branch",
				"GitGutter: Compare Against Branch"
			],
			[
				"bra",
				"GitGutter: Compare Against Branch"
			],
			[
				"stat",
				"Indexing Status"
			],
			[
				"pul",
				"Git: Pull"
			],
			[
				"log",
				"Git: Log Current File"
			],
			[
				"sta",
				"Git: Status"
			],
			[
				"ad.",
				"Git: Add..."
			],
			[
				"co",
				"Git: Commit"
			],
			[
				"git add.",
				"Git: Add..."
			],
			[
				"git ad",
				"Git: Add..."
			],
			[
				"git lo",
				"Git: Log All"
			],
			[
				"mer",
				"Git: Merge Branch"
			],
			[
				"git com\t",
				"Git: Commit"
			],
			[
				"add..",
				"Git: Add..."
			],
			[
				"change",
				"Git: Change Branch"
			],
			[
				"git che",
				"Git: Change Branch"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git add..",
				"Git: Add..."
			],
			[
				"git add ",
				"Git: Add..."
			],
			[
				"git cha",
				"Git: Change Branch"
			],
			[
				"git pu",
				"Git: Pull"
			],
			[
				"git di",
				"Git: Diff All Files"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git bra",
				"Git: Change Branch"
			],
			[
				"git:  ",
				"Git: Status"
			],
			[
				"git:  che",
				"Git: Change Branch"
			],
			[
				"git:  s",
				"Git: Status"
			],
			[
				"git:  com",
				"Git: Commit"
			],
			[
				"git:  push",
				"Git: Push Current Branch"
			],
			[
				"git:  pus",
				"Git: Push"
			],
			[
				"git:  add",
				"Git: Add..."
			],
			[
				"git ",
				"Git: Change Branch"
			],
			[
				"git st",
				"Git: Status"
			],
			[
				"git p",
				"Git: Pull"
			],
			[
				"git sta",
				"Git: Status"
			],
			[
				"git",
				"Git: Change Branch"
			],
			[
				"git checkout",
				"Git: Checkout Tag"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"git A",
				"Git: Add..."
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Tasks",
				"Tasks: New document"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"git: chec",
				"Git: Change Branch"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"Remove Package",
				"Package Control: Remove Package"
			]
		],
		"width": 540.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/WarKB/Desktop/PersonalProjects/MySite/PersonalSite"
	],
	"file_history":
	[
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing/admin.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing/static/style.css",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/products/models.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/orders/models.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/webstore/urls.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/webstore/settings.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing/views.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/readme.txt",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing/forms.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing/templates/landing/landing.html",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing/models.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/tmp.js",
		"/home/kurbatovbn/YaDisk/DjangoProjects/tmp.html",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing/urls.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing/migrations/0001_initial.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/db.sqlite3",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing/templates/forms.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/templates/landing/landing.html",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/settings.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/templates/landing/__init__.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/templates/__init__.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing/__init__.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/templates/admin/base_site.html",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/mysite/settings.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/admin.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/models.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/mysite/urls.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/urls.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/templates/pols/index.html",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/aaa/aaa_check_timeout.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/static/pols/style.css",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/templates/pols/detail.html",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/templates/pols/results.html",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/tests.py",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/views.py",
		"/home/kurbatovbn/git/ETPv3/getAllTestsInFolder.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/utilities/start/start_self_test.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.aaa.aaa_tacacs_plus 2018-02-22 14:20:03",
		"/home/kurbatovbn/YaDisk/DjangoProjects/mysite/pols/templates/__init__.py",
		"/home/kurbatovbn/YaDisk/OpenDev/questions.todo",
		"/home/kurbatovbn/YaDisk/OpenDev/answers.txt",
		"/home/kurbatovbn/tmp.py",
		"/home/kurbatovbn/YaDisk/OpenDev/RESTfulAPIDesigningGuidelines_en.txt",
		"/home/kurbatovbn/YaDisk/OpenDev/RESTfulAPIDesigningGuidelines_ru.txt",
		"/home/kurbatovbn/YaDisk/OpenDev/mock_ru.txt",
		"/home/kurbatovbn/YaDisk/OpenDev/mock_en.txt",
		"/home/kurbatovbn/git/ETPv3/getRunResult.py",
		"/home/kurbatovbn/workspace/usefullScripts/fillUpTrapLog.py",
		"/home/kurbatovbn/tmp/after100",
		"/home/kurbatovbn/tmp/before100",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/dual_start.py",
		"/home/kurbatovbn/tmp/after",
		"/home/kurbatovbn/tmp/before",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/aaa/aaa_tacacs_auth.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/logging/logging_wrong_message.py",
		"/home/kurbatovbn/Downloads/answers.txt",
		"/home/kurbatovbn/Downloads/questions.todo",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix/system/system_table_network.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix/system/system_cli.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-13 13:32:55",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/services/dhcp/dhcp_server.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-13 14:10:42",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/linux/system.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/dhcp/dhcp_support.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/env/lib/python2.7/site-packages/trollius/base_events.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-13 13:15:12",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-13 11:27:39",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-13 11:13:34",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-13 10:59:12",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-13 11:20:47",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-13 11:25:50",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-12 10:21:59",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/utilities/ip.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/utilities/comparison.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-06 09:59:21",
		"/home/kurbatovbn/AutomatPython/archive/questions.todo",
		"/home/kurbatovbn/AutomatPython/archive/answers.txt",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-05 10:39:35",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-05 10:41:57",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-05 09:13:11",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-05 08:53:10",
		"/run/media/kurbatovbn/C0FC-B943/OpenDev/answers.txt",
		"/run/media/kurbatovbn/C0FC-B943/OpenDev/questions.todo",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-02-02 10:32:25",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/pppoe/pppoe_add_checking_mode.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/acl/acl_working_without.py",
		"/home/tftp/test.jpg",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/lldp/lldp_med.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/packets/sniffer.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix/system/system_table_routes.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-01-30 15:51:28",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-01-30 14:49:43",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-01-30 11:01:22",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-01-30 10:23:27",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix/syslog/syslog_proxy_cli.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/syslog/syslog_every_server.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.dhcp.dhcp_support 2018-01-30 09:35:34",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/aaa/tacacs_single_session_authentication.py",
		"/home/kurbatovbn/aliases.sh",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/acl/acl_base.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix/pppoe/pppoe_cli.py",
		"/home/kurbatovbn/sentence.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/packets/packet_pppoed.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/access/telnet.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix/system/system_config.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix/system/system_table_common_receiver.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/system/system_cpu_protected.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.qos.qos_dscp_remarking 2018-01-25 16:47:06",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.qos.qos_trust_dot1p 2018-01-25 16:27:11",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.aaa.aaa_tacacs_plus 2018-01-25 16:22:27",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix/arp.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/linux/ping.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix/dhcp/dhcp_cli.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.tftp.tftp_flash_memory 2018-01-18 09:21:13",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.vlan.vlan_translation_ingress 2018-01-18 08:59:36",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/arp.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.acl.acl_mgmt 2018-01-17 08:53:15",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/qos/qos_trust_dot1p.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/qos/qos_dont_trust.py",
		"/run/media/kurbatovbn/C0FC-B943/Новая папка/Минимум для Java Junior/SQL and JDBC.txt",
		"/run/media/kurbatovbn/C0FC-B943/Новая папка/Минимум для Java Junior/JavaJunior.todo",
		"/run/media/kurbatovbn/C0FC-B943/Новая папка/Минимум для Java Junior/Spring.txt",
		"/run/media/kurbatovbn/C0FC-B943/Новая папка/Минимум для Java Junior/Concurrency.txt",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix/qos/qos_table_trust.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.qos.qos_trust_dot1p 2018-01-12 15:59:11",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.qos.qos_trust_dot1p 2018-01-12 15:28:28",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/snmp/snmp_cut_str.py",
		"/home/kurbatovbn/git/ETPv3/PythonTestProject/log/tests.qos.qos_trust_dot1p 2018-01-11 14:57:57"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 119.0,
		"where_history":
		[
			"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/",
			"/home/kurbatovbn/YaDisk/DjangoProjects/webstore/landing",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/Pyt,/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/Pyt,/home/kurbatovbn/git/ETPv3/PythonTestProject/utilities/start",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/linux",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/linux",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/files/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests/load",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal/bcm_phoenix",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/tests",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject/hal",
			"/home/kurbatovbn/git/ETPv3/PythonTestProject"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"order",
			"Subscribers",
			"pols",
			"STATICFILES_DIRS",
			"__CheckNetworkSettingsOnSwitch",
			"echo",
			"~$",
			"$",
			"[править | править код]",
			"#",
			"5407",
			"[\\d+\\d]",
			"\\d",
			"#",
			"killall telnet",
			"#",
			"DhcpServerService",
			"Enable",
			"forwarding",
			"\n",
			"eth0",
			")\n",
			"print",
			"vot",
			"networkTable",
			"network",
			"Проверим, что появился  Ipv6 адресс из подсети,",
			"network ipv6 address autoconfig",
			"CheckWorkingWihoutAcl_13521_1",
			"print",
			"CheckSendInventoryTLV_12762_1",
			"GetIpv4AndGwWithStaticGwPart2_12998_5",
			"print",
			"Проверяем, что в таблице маршрутизации на коммутаторе дефолтный маршрут только один и он для интерфейса additional",
			"NetworkRoutesTable",
			"mask",
			"DRY",
			"\n",
			"/* */",
			"ipCompAddres1",
			"pyshark",
			"logging cli-command",
			"logging host",
			"logging syslog facility",
			"logging syslog",
			"show",
			"con",
			"pppoe untrust vendor-tag drop",
			"pppoe ",
			"pppoe untrust ",
			"pppoe untrust vendor-tag ",
			"pppoe untrust vendor-tag forward",
			"HexPacket",
			"hex",
			"pppoe trust",
			"pppoe frmtstr",
			"|",
			"Сц",
			"задачи",
			"ProtectionAgainstDHCPv4ClientPackets_5648_9_10",
			"CFE> ",
			"print",
			"ip dhcp snooping",
			"show ip arp inspection",
			"show ip arp inspection ",
			"ip arp inspection vlan",
			"ip arp inspection",
			"arp access-list",
			"QoSGlobalSettings_5894_1",
			"☐",
			")\n",
			"Counters comparison #2",
			"Counters comparison #1",
			"QosTrustTable",
			"__modeToStr",
			"ArpInspectionSnmpBase_5410_7_2",
			"transmit-mgmt",
			"'|||'",
			"getoutput",
			"expected string without null bytes",
			"hex",
			"snmp",
			"x",
			"snmp.Send",
			"True",
			"EnableLoggingPermanent",
			"qos_trust_dot1p",
			"VlanBasedAnd8021p_5894_4",
			"[а-я]+[ ,]+",
			"QoSRemarkingAnd8021p_5894_5",
			"classofservice trust dot1p",
			"\\w+\\.\\w+\\.\\w+",
			"\\w.\\w.\\w",
			"\\w+.+\\w+.+\\w",
			"pb",
			"SetDscp",
			"classofservice trust",
			"']\n",
			"vlan",
			"vlan ",
			"vlan",
			"ERROR",
			"traffic-shape",
			"CheckUntrust_13331_1",
			"QosTrustTable",
			"classofservice dot1p-mapping",
			"GetClassofserviceMapping",
			"show classofservice dot1p-mapping",
			"GetClassofserviceTrust",
			"show classofservice trust",
			"__CheckNetworkSettingsOnSwitch",
			"ICMP",
			"GetIpAndGw_12998_3",
			"CheckSendInventoryTLV_12762_1",
			"SerialBaudrateSettings_12997_2",
			"CheckAddressAndGatewayIPv6Configure_12614_1",
			"SUBTEST: ",
			"CheckOfTrafficBlockedByIPv6CpuAcl_10920_39",
			"OnLldpMedWithEndpointDevices_7457_3_2",
			"__CheckPlatform",
			"ALS-24623-10-03",
			"        \n",
			"show port all",
			"self.__CheckPlatform",
			"10",
			"__CheckNetworkSettingsOnSwitch",
			"OnLldpMedWithEndpointDevices_7457_3_2",
			"self.__CheckPlatform"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Subscriber",
			"",
			"DhcpServerServiceV1dot0",
			"qosTrustTable",
			"__ModeToStr",
			"self.vlan",
			"",
			"аутентификация",
			"tests/dhcp/dhcp_support/",
			"    ",
			"|Написать",
			"self.com",
			"self.dhcpCli",
			"self.sysCli",
			"    ",
			"snif2",
			"    ",
			"__FormIgmpPack",
			"    "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1250,
						"regions":
						{
						},
						"selection":
						[
							[
								201,
								201
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1034,
						"regions":
						{
						},
						"selection":
						[
							[
								11,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"git_gutter_is_enabled": true,
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "paralax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 311,
						"regions":
						{
						},
						"selection":
						[
							[
								86,
								86
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										86,
										87
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										73,
										74
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/WarKB/YandexDisk/КНИГИ/js/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 143,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								15
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										14,
										15
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/angle_bracket.png",
										"region.orangish"
									]
								},
								"open":
								{
									"1":
									[
										0,
										1
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/WarKB/YandexDisk/КНИГИ/js/script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 304,
						"regions":
						{
						},
						"selection":
						[
							[
								304,
								304
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 18,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 132.0
	},
	"output.exec":
	{
		"height": 357.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 322.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 100.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "personalSite.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"lan",
				"webstore/landing/templates/landing/landing.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\WarKB\\Documents\\MyLife\\MyLife.sublime-project"
			],
			[
				"d",
				"~YaDisk/DjangoProjects/DjangoProjects.sublime-project"
			],
			[
				"e",
				"~git/ETPv3/PythonTestProject/ETPv3.sublime-project"
			],
			[
				"E",
				"~git/ETPv3/PythonTestProject/ETPv3.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 203.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
